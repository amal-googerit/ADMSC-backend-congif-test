name: Revert PR Changes

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR Number to revert'
        required: true
        type: string
      confirm_revert:
        description: 'Type "REVERT" to confirm'
        required: true
        type: string

jobs:
  revert-pr:
    runs-on: ubuntu-latest
    name: Revert PR Changes
    
    steps:
      - name: Validate Confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_revert }}" != "REVERT" ]; then
            echo "❌ Revert not confirmed. Please type 'REVERT' to proceed."
            exit 1
          fi
          echo "✅ Revert confirmed for PR #${{ github.event.inputs.pr_number }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Revert"
          git config user.email "actions@github.com"

      - name: Get PR Information
        id: pr_info
        run: |
          echo "Getting information for PR #${{ github.event.inputs.pr_number }}"
          
          # Get PR details using GitHub CLI or API
          PR_TITLE=$(gh pr view ${{ github.event.inputs.pr_number }} --json title --jq '.title' || echo "Unknown PR")
          PR_MERGE_COMMIT=$(gh pr view ${{ github.event.inputs.pr_number }} --json mergeCommit --jq '.mergeCommit.oid' || echo "")
          
          echo "PR Title: $PR_TITLE"
          echo "Merge Commit: $PR_MERGE_COMMIT"
          
          if [ -z "$PR_MERGE_COMMIT" ] || [ "$PR_MERGE_COMMIT" = "null" ]; then
            echo "❌ Could not find merge commit for PR #${{ github.event.inputs.pr_number }}"
            exit 1
          fi
          
          echo "merge_commit=$PR_MERGE_COMMIT" >> $GITHUB_OUTPUT
          echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT

      - name: Revert PR Changes
        run: |
          echo "🔄 Reverting PR #${{ github.event.inputs.pr_number }}"
          echo "Merge commit: ${{ steps.pr_info.outputs.merge_commit }}"
          
          # Create revert commit
          git revert --no-edit ${{ steps.pr_info.outputs.merge_commit }}
          
          # Push the revert
          git push origin main
          
          echo "✅ Successfully reverted PR #${{ github.event.inputs.pr_number }}"

      - name: Create Revert Summary
        run: |
          cat > revert-summary.md << EOF
          # 🔄 PR Revert Summary
          
          ## Reverted PR
          - **PR Number**: #${{ github.event.inputs.pr_number }}
          - **PR Title**: ${{ steps.pr_info.outputs.pr_title }}
          - **Merge Commit**: ${{ steps.pr_info.outputs.merge_commit }}
          - **Revert Time**: $(date)
          
          ## What Happened
          
          1. ✅ PR #${{ github.event.inputs.pr_number }} has been reverted
          2. ✅ Main branch restored to previous state
          3. ✅ All changes from the PR have been undone
          
          ## Next Steps
          
          - The development server will automatically pull the reverted changes
          - Monitor the deployment status
          - If needed, create a new PR with fixes
          
          ---
          *Revert completed by GitHub Actions*
          EOF

      - name: Notify Revert
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"🔄 PR #'${{ github.event.inputs.pr_number }}' has been reverted! Main branch restored to previous state."}' \
            ${{ secrets.SLACK_WEBHOOK || 'https://hooks.slack.com/services/placeholder' }} || true

      - name: Comment on Original PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comment } = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.inputs.pr_number }},
              body: `## 🔄 PR Reverted
              
              This PR has been reverted due to deployment issues.
              
              - **Revert Time**: ${new Date().toISOString()}
              - **Reason**: Manual revert requested
              - **Status**: Changes have been undone from main branch
              
              Please create a new PR with fixes if needed.`
            });
